{"version":3,"sources":["components/book.jsx","components/carousel.jsx","components/section.jsx","constants.js","services/goodreadsService.js","components/searchResults.jsx","components/addBookForm.jsx","App.js","serviceWorker.js","index.js"],"names":["Book","title","author","imgUrl","container","useRef","text","bookImg","key","ref","className","draggable","src","alt","onMouseEnter","e","event","imgWidth","target","offsetWidth","imgHeight","offsetHeight","style","opacity","current","minWidth","height","left","hoverImg","onMouseLeave","Carousel","items","useState","startIndex","setStartIndex","Button","icon","onClick","disabled","margin","display","overflow","flex","length","blocks","books","index","element","push","imageUrl","numPlaceholders","color","displayItems","Loader","inline","active","Section","getColorWithIndex","endpoint","config","headers","parseXml","xml","Promise","resolve","reject","xml2js","err","result","getBooks","shelf","a","api","axios","get","goodreadsResult","data","json","results","GoodreadsResponse","reviews","review","map","res","book","authors","name","bookId","work","id","image_url","searchBooks","query","search","best_book","_","SearchResultsContainer","setShowInfoBox","resetSearch","selectedBooks","setSelectedBooks","onClickButton","Segment","onClickBook","includes","Group","Or","AddBookForm","searchResultsHeader","searchResults","setSearchResults","searchValue","setSearchValue","showInfoBox","loadingSearch","setLoadingSearch","preventDefault","window","scrollTo","offsetTop","paddingBottom","Form","Input","fluid","action","loading","fetchSearchResults","placeholder","value","onChange","Message","info","content","App","readBooks","setReadBooks","laterBooks","setLaterBooks","useEffect","done","later","getBookLists","Popup","trigger","circular","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.52f54a9b.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\n\nconst Book = ({ title, author, imgUrl }) => {\n  const container = useRef();\n  const text = useRef();\n  const bookImg = useRef();\n\n  const hoverImg = (event) => {\n    const imgWidth = event.target.offsetWidth;\n    const imgHeight = event.target.offsetHeight;\n\n    event.target.style.opacity = \"0.2\";\n    container.current.style.minWidth = imgWidth + \"px\";\n    text.current.style.minWidth = imgWidth + \"px\";\n    text.current.style.height = imgHeight + \"px\";\n    text.current.style.left = -imgWidth + \"px\";\n  };\n\n  const stopHover = () => {\n    bookImg.current.style.opacity = \"1\";\n    container.current.style.minWidth = \"64px\";\n    text.current.style.left = \"0px\";\n  };\n\n  return (\n    <div key={title} ref={container} className='Book' draggable='true'>\n      <img\n        src={imgUrl}\n        alt={title}\n        ref={bookImg}\n        onMouseEnter={(e) => hoverImg(e)}\n      />\n      <div ref={text} className='Book-text' onMouseLeave={(e) => stopHover(e)}>\n        <b>{title}</b>\n        <br />\n        {author}\n      </div>\n    </div>\n  );\n};\n\nexport default Book;\n","import React, { useState } from \"react\";\nimport { Button, Loader } from \"semantic-ui-react\";\nimport Book from \"./book\";\n\nconst Carousel = ({ items }) => {\n  const [startIndex, setStartIndex] = useState(0);\n  const onClickLeft = () => {\n    if (startIndex > 0) {\n      setStartIndex(startIndex - 1);\n    }\n  };\n  const onClickRight = () => {\n    if (startIndex < items.length - 1) {\n      setStartIndex(startIndex + 1);\n    }\n  };\n\n  const displayItems = (blocks) => {\n    let books = [];\n    for (let index = startIndex; index < blocks.length; index++) {\n      const element = blocks[index];\n      books.push(\n        <Book\n          key={element.title}\n          title={element.title}\n          imgUrl={element.imageUrl}\n          author={element.author}\n        />\n      );\n    }\n\n    let numPlaceholders = startIndex;\n    while (numPlaceholders > 0) {\n      books.push(<Book key={numPlaceholders} color={\"transparent\"} />);\n      numPlaceholders--;\n    }\n\n    // Place an extra placeholder at end\n    books.push(<Book key={numPlaceholders} color={\"transparent\"} />);\n\n    return books;\n  };\n\n  return (\n    <div className='Carousel'>\n      <Button\n        icon='arrow left'\n        onClick={onClickLeft}\n        disabled={!items || startIndex === 0}\n        style={{ height: \"50px\", margin: \"0 10px\" }}\n      />\n      <div style={{ display: \"flex\", overflow: \"hidden\", flex: \"1\" }}>\n        {items ? (\n          items.length > 0 ? (\n            displayItems(items)\n          ) : (\n            <div style={{ margin: \"0 auto\" }}>No books found.</div>\n          )\n        ) : (\n          <Loader inline='centered' active />\n        )}\n      </div>\n      <Button\n        icon='arrow right'\n        onClick={onClickRight}\n        disabled={!items || startIndex === items.length - 1}\n        style={{ height: \"50px\", margin: \"0 10px\" }}\n      />\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from \"react\";\nimport Carousel from \"./carousel\";\n\nconst Section = ({ title, books, getColorWithIndex }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      <Carousel items={books} getColorWithIndex={getColorWithIndex} />\n    </>\n  );\n};\n\nexport default Section;\n","export const key = \"UcQW9As1jUkPj9SLeOgKw\"; //TODO: Move this\nexport const secret = \"gDEVC0enFuZM9DGH7SzsN1OBSITguuNfPw522NUh4\";\nexport const userId = \"62798650\";\n","import axios from \"axios\";\nimport * as xml2js from \"xml2js\";\nimport { key, userId } from \"../constants\";\n\nconst endpoint =\n  \"https://cors-anywhere.herokuapp.com/https://www.goodreads.com\";\n\nconst config = {\n  headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n};\n\nfunction parseXml(xml) {\n  return new Promise((resolve, reject) => {\n    xml2js.parseString(xml, (err, result) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n}\n\nexport async function getBooks(shelf) {\n  const api =\n    endpoint +\n    \"/review/list/\" +\n    userId +\n    \".xml?key=\" +\n    key +\n    \"&v=2&shelf=\" +\n    shelf;\n  const goodreadsResult = await axios.get(api, config);\n  const json = await parseXml(goodreadsResult.data);\n  const results = json.GoodreadsResponse.reviews[0].review;\n  if (!results) return [];\n  return results.map((res) => {\n    const book = res.book[0];\n    return {\n      title: book.title[0],\n      author: book.authors[0].author[0].name[0],\n      bookId: book.work[0].id[0],\n      imageUrl: book.image_url[0],\n    };\n  });\n}\n\nexport async function searchBooks(query) {\n  const api = endpoint + \"/search/index.xml?key=\" + key + \"&q=\" + query;\n  const goodreadsResult = await axios.get(api, config);\n  const json = await parseXml(goodreadsResult.data);\n  const results = json.GoodreadsResponse.search[0].results[0].work;\n  return results.map((res) => {\n    const book = res.best_book[0];\n    return {\n      title: book.title[0],\n      author: book.author[0].name[0],\n      bookId: book.id[0]._,\n      imageUrl: book.image_url[0],\n    };\n  });\n}\n","import React, { useState } from \"react\";\nimport { Button, Segment } from \"semantic-ui-react\";\n\nconst SearchResultsContainer = ({ books, setShowInfoBox, resetSearch }) => {\n  const [selectedBooks, setSelectedBooks] = useState([]);\n  const onClickButton = (e) => {\n    resetSearch();\n    setShowInfoBox(true);\n  };\n\n  const onClickBook = (bookId) => {\n    setSelectedBooks([...selectedBooks, bookId]);\n  };\n\n  return (\n    <Segment>\n      <h3>SEARCH RESULTS</h3>\n      {books && books.length > 0 && (\n        <ul>\n          {books.map(({ bookId, title, author }) => (\n            <li\n              key={bookId}\n              onClick={(e) => onClickBook(bookId)}\n              className={selectedBooks.includes(bookId) ? \"selectedBook\" : null}\n            >\n              {title} by {author}\n            </li>\n          ))}\n        </ul>\n      )}\n      <Button.Group>\n        <Button onClick={onClickButton}>Add to read.</Button>\n        <Button.Or />\n        <Button onClick={onClickButton}>Add to later.</Button>\n      </Button.Group>\n    </Segment>\n  );\n};\n\nexport default SearchResultsContainer;\n","import React, { useState, useRef } from \"react\";\nimport { Form, Message } from \"semantic-ui-react\";\nimport { searchBooks } from \"../services/goodreadsService\";\nimport SearchResultsContainer from \"./searchResults\";\n\nconst AddBookForm = () => {\n  const searchResultsHeader = useRef(null);\n\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [showInfoBox, setShowInfoBox] = useState(false);\n  const [loadingSearch, setLoadingSearch] = useState(false);\n\n  const resetSearch = () => {\n    setSearchValue(\"\");\n    setSearchResults([]);\n  };\n\n  async function fetchSearchResults(e) {\n    e.preventDefault();\n\n    setShowInfoBox(false);\n    setLoadingSearch(true);\n    const res = await searchBooks(searchValue);\n    setSearchResults(res);\n    if (searchResultsHeader !== null) {\n      window.scrollTo(0, searchResultsHeader.current.offsetTop);\n    }\n    setLoadingSearch(false);\n  }\n\n  return (\n    <div style={{ paddingBottom: \"24px\" }}>\n      <h2 ref={searchResultsHeader}>add.</h2>\n      <Form>\n        <Form.Input\n          fluid\n          action={{\n            color: \"teal\",\n            icon: \"search\",\n            loading: loadingSearch,\n            onClick: (e) => fetchSearchResults(e),\n          }}\n          placeholder='Search Goodreads for books'\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value)}\n        />\n      </Form>\n      {searchResults.length > 0 && !showInfoBox && (\n        <SearchResultsContainer\n          books={searchResults}\n          setShowInfoBox={setShowInfoBox}\n          resetSearch={resetSearch}\n        />\n      )}\n      {showInfoBox && (\n        <Message\n          info\n          content='This book has also been added to your list in Goodreads.'\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AddBookForm;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Button, Popup } from \"semantic-ui-react\";\nimport Section from \"./components/section\";\nimport AddBookForm from \"./components/addBookForm\";\nimport { getBooks } from \"./services/goodreadsService\";\n\nfunction App() {\n  const [readBooks, setReadBooks] = useState(null);\n  const [laterBooks, setLaterBooks] = useState(null);\n\n  useEffect(() => {\n    async function getBookLists() {\n      const done = await getBooks(\"read\");\n      const later = await getBooks(\"to-read\");\n      setReadBooks(done);\n      setLaterBooks(later);\n    }\n    getBookLists();\n  }, []);\n\n  return (\n    <div className='App'>\n      <h1>library.</h1>\n      <div className='buttonGroup'>\n        <Popup\n          content='Show as lists.'\n          trigger={<Button circular color='teal' icon='list ul' />}\n        />\n        <Popup\n          content='Go to Goodreads.'\n          trigger={<Button circular color='teal' icon='goodreads' />}\n        />\n        <Popup\n          content='Sign-in via Google.'\n          trigger={<Button circular color='teal' icon='sign-in' />}\n        />\n      </div>\n      <hr />\n      <AddBookForm />\n      <div>\n        <Section books={readBooks} title='done.' />\n        <Section books={laterBooks} title='later.' />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}