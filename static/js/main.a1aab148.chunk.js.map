{"version":3,"sources":["components/book.jsx","components/carousel.jsx","components/list.jsx","components/section.jsx","services/goodreadsService.js","components/searchResults.jsx","components/addBookForm.jsx","pages/Home.js","pages/Booklist.js","App.js","serviceWorker.js","index.js"],"names":["Book","title","author","imgUrl","container","useRef","text","bookImg","key","ref","className","draggable","src","alt","onMouseEnter","e","event","imgWidth","target","offsetWidth","imgHeight","offsetHeight","style","opacity","current","minWidth","height","left","hoverImg","onMouseLeave","Carousel","items","useState","startIndex","setStartIndex","Button","icon","onClick","disabled","margin","display","overflow","flex","length","blocks","books","index","element","push","imageUrl","numPlaceholders","color","displayItems","Loader","inline","active","List","maxHeight","map","bookId","Section","showAsList","callback","a","axios","get","getBooks","shelf","shelfResults","data","addBooks","selectedBooks","post","bookIds","searchBooks","query","searchResults","SearchResultsContainer","setShowInfoBox","resetSearch","getBookLists","setSelectedBooks","onClickButton","Segment","includes","filter","selectedBook","onClickBook","Group","Or","marginLeft","AddBookForm","searchResultsHeader","setSearchResults","searchValue","setSearchValue","showInfoBox","loadingSearch","setLoadingSearch","preventDefault","res","window","scrollTo","offsetTop","paddingBottom","Form","Input","fluid","action","loading","fetchSearchResults","placeholder","value","onChange","Message","info","content","onDismiss","Home","props","readBooks","setReadBooks","laterBooks","setLaterBooks","useEffect","sessionStorage","setItem","history","replace","location","search","redirectAfterAuthorization","Promise","all","getAllBooks","Booklist","App","React","setShowAsList","signIn","open","Popup","trigger","circular","href","path","render","exact","component","Boolean","hostname","match","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8TAyCeA,EAvCF,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACvBC,EAAYC,mBACZC,EAAOD,mBACPE,EAAUF,mBAmBhB,OACE,yBAAKG,IAAKP,EAAOQ,IAAKL,EAAWM,UAAU,OAAOC,UAAU,QAC1D,yBACEC,IAAKT,EACLU,IAAKZ,EACLQ,IAAKF,EACLO,aAAc,SAACC,GAAD,OAvBH,SAACC,GAChB,IAAMC,EAAWD,EAAME,OAAOC,YACxBC,EAAYJ,EAAME,OAAOG,aAE/BL,EAAME,OAAOI,MAAMC,QAAU,MAC7BnB,EAAUoB,QAAQF,MAAMG,SAAWR,EAAW,KAC9CX,EAAKkB,QAAQF,MAAMG,SAAWR,EAAW,KACzCX,EAAKkB,QAAQF,MAAMI,OAASN,EAAY,KACxCd,EAAKkB,QAAQF,MAAMK,MAAQV,EAAW,KAebW,CAASb,MAEhC,yBAAKN,IAAKH,EAAMI,UAAU,YAAYmB,aAAc,SAACd,GAAD,OAbtDR,EAAQiB,QAAQF,MAAMC,QAAU,IAChCnB,EAAUoB,QAAQF,MAAMG,SAAW,YACnCnB,EAAKkB,QAAQF,MAAMK,KAAO,SAYtB,2BAAI1B,GACJ,6BACCC,KCqCM4B,EApEE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACMC,mBAAS,GADf,mBACvBC,EADuB,KACXC,EADW,KAuC9B,OACE,yBAAKxB,UAAU,YACb,kBAACyB,EAAA,EAAD,CACEC,KAAK,aACLC,QAzCc,WACdJ,EAAa,GACfC,EAAcD,EAAa,IAwCzBK,UAAWP,GAAwB,IAAfE,EACpBX,MAAO,CAAEI,OAAQ,OAAQa,OAAQ,YAEnC,yBAAKjB,MAAO,CAAEkB,QAAS,OAAQC,SAAU,SAAUC,KAAM,MACtDX,EACCA,EAAMY,OAAS,EApCF,SAACC,GAEpB,IADA,IAAIC,EAAQ,GACHC,EAAQb,EAAYa,EAAQF,EAAOD,OAAQG,IAAS,CAC3D,IAAMC,EAAUH,EAAOE,GACvBD,EAAMG,KACJ,kBAAC,EAAD,CACExC,IAAKuC,EAAQ9C,MACbA,MAAO8C,EAAQ9C,MACfE,OAAQ4C,EAAQE,SAChB/C,OAAQ6C,EAAQ7C,UAMtB,IADA,IAAIgD,EAAkBjB,EACfiB,EAAkB,GACvBL,EAAMG,KAAK,kBAAC,EAAD,CAAMxC,IAAK0C,EAAiBC,MAAO,iBAC9CD,IAMF,OAFAL,EAAMG,KAAK,kBAAC,EAAD,CAAMxC,IAAK0C,EAAiBC,MAAO,iBAEvCN,EAcCO,CAAarB,GAEb,yBAAKT,MAAO,CAAEiB,OAAQ,WAAtB,mBAGF,kBAACc,EAAA,EAAD,CAAQC,OAAO,WAAWC,QAAM,KAGpC,kBAACpB,EAAA,EAAD,CACEC,KAAK,cACLC,QArDe,WACfJ,EAAaF,EAAMY,OAAS,GAC9BT,EAAcD,EAAa,IAoDzBK,UAAWP,GAASE,IAAeF,EAAMY,OAAS,EAClDrB,MAAO,CAAEI,OAAQ,OAAQa,OAAQ,cCzC1BiB,EAtBF,SAAC,GAAe,IAAbzB,EAAY,EAAZA,MACd,OACE,yBAAKT,MAAO,CAAEmC,UAAW,IAAKhB,SAAU,SACtC,4BACGV,EACCA,EAAMY,OAAS,EACbZ,EAAM2B,KAAI,gBAAGC,EAAH,EAAGA,OAAQ1D,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,OAAlB,OACR,wBAAIS,WAAS,EAACH,IAAKmD,GAChB1D,EADH,OACcC,MAIhB,yBAAKoB,MAAO,CAAEiB,OAAQ,WAAtB,mBAGF,kBAACc,EAAA,EAAD,CAAQC,OAAO,WAAWC,QAAM,OCL3BK,EATC,SAAC,GAAkC,IAAhC3D,EAA+B,EAA/BA,MAAO4C,EAAwB,EAAxBA,MAAOgB,EAAiB,EAAjBA,WAC/B,OACE,oCACE,4BAAK5D,GACJ4D,EAAa,kBAAC,EAAD,CAAM9B,MAAOc,IAAY,kBAAC,EAAD,CAAUd,MAAOc,M,mCCNvD,SAAeiB,IAAtB,+B,4CAAO,sBAAAC,EAAA,sEACCC,IAAMC,IAAI,2DADX,4C,sBAIA,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,eAAAJ,EAAA,sEACsBC,IAAMC,IAC/B,+DAAiEE,GAF9D,cACCC,EADD,yBAIEA,EAAaC,MAJf,4C,sBAOA,SAAeC,EAAtB,oC,4CAAO,WAAwBH,EAAOI,GAA/B,SAAAR,EAAA,sEACCC,IAAMQ,KAAK,wDAAyD,CACxEC,QAASF,EACTJ,UAHG,4C,sBAOA,SAAeO,EAAtB,kC,4CAAO,WAA2BC,GAA3B,eAAAZ,EAAA,sEACuBC,IAAMC,IAChC,gEAAkEU,GAF/D,cACCC,EADD,yBAIEA,EAAcP,MAJhB,4C,4CCyCQQ,EAzDgB,SAAC,GAKzB,IAJLhC,EAII,EAJJA,MACAiC,EAGI,EAHJA,eACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aACI,EACsChD,mBAAS,IAD/C,mBACGuC,EADH,KACkBU,EADlB,KAGEC,EAAa,uCAAG,WAAOf,GAAP,SAAAJ,EAAA,sEACdO,EAASH,EAAOI,GADF,OAEpBQ,IACAD,GAAe,GACfE,EAAab,GAJO,2CAAH,sDAqBnB,OACE,kBAACgB,EAAA,EAAD,KACE,8CACCtC,GAASA,EAAMF,OAAS,GACvB,4BACGE,EAAMa,KAAI,gBAAGC,EAAH,EAAGA,OAAQ1D,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,OAAlB,OACT,wBACEM,IAAKmD,EACLtB,QAAS,SAACtB,GAAD,OAtBD,SAAC4C,GACfY,EAAca,SAASzB,GACzBsB,EACEV,EAAcc,QAAO,SAACC,GAAD,OAAkBA,IAAiB3B,MAG1DsB,EAAiB,GAAD,mBAAKV,GAAL,CAAoBZ,KAgBZ4B,CAAY5B,IAC5BjD,UAAW6D,EAAca,SAASzB,GAAU,eAAiB,MAE5D1D,EALH,OAKcC,OAKpB,kBAACiC,EAAA,EAAOqD,MAAR,KACE,kBAACrD,EAAA,EAAD,CAAQE,QAAS,kBAAM6C,EAAc,UAArC,gBACA,kBAAC/C,EAAA,EAAOsD,GAAR,MACA,kBAACtD,EAAA,EAAD,CAAQE,QAAS,kBAAM6C,EAAc,aAArC,kBAEF,kBAAC/C,EAAA,EAAD,CAAQgB,MAAM,OAAO7B,MAAO,CAAEoE,WAAY,IAAMrD,QAzB/B,WACnB0C,MAwBE,WCaSY,EA9DK,SAAC,GAAsB,IAApBX,EAAmB,EAAnBA,aACfY,EAAsBvF,iBAAO,MADK,EAGE2B,mBAAS,IAHX,mBAGjC4C,EAHiC,KAGlBiB,EAHkB,OAIF7D,mBAAS,IAJP,mBAIjC8D,EAJiC,KAIpBC,EAJoB,OAKF/D,oBAAS,GALP,mBAKjCgE,EALiC,KAKpBlB,EALoB,OAME9C,oBAAS,GANX,mBAMjCiE,EANiC,KAMlBC,EANkB,iDAaxC,WAAkCnF,GAAlC,eAAAgD,EAAA,6DACEhD,EAAEoF,iBAEFrB,GAAe,GACfoB,GAAiB,GAJnB,SAKoBxB,EAAYoB,GALhC,OAKQM,EALR,OAMEP,EAAiBO,GACW,OAAxBR,GACFS,OAAOC,SAAS,EAAGV,EAAoBpE,QAAQ+E,WAEjDL,GAAiB,GAVnB,4CAbwC,sBA0BxC,OACE,yBAAK5E,MAAO,CAAEkF,cAAe,SAC3B,wBAAI/F,IAAKmF,GAAT,QACA,kBAACa,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CACEC,OAAK,EACLC,OAAQ,CACNzD,MAAO,OACPf,KAAM,SACNyE,QAASZ,EACT5D,QAAS,SAACtB,GAAD,OApCqB,2CAoCd+F,CAAmB/F,KAErCgG,YAAY,6BACZC,MAAOlB,EACPmB,SAAU,SAAClG,GAAD,OAAOgF,EAAehF,EAAEG,OAAO8F,WAG5CpC,EAAcjC,OAAS,IAAMqD,GAC5B,kBAAC,EAAD,CACEnD,MAAO+B,EACPE,eAAgBA,EAChBE,aAAcA,EACdD,YAxCY,WAClBgB,EAAe,IACfF,EAAiB,OAyCdG,GACC,kBAACkB,EAAA,EAAD,CACEC,MAAI,EACJC,QAAQ,2DACRC,UAAW,kBAAMvC,GAAe,QCT3BwC,EA9CF,SAACC,GAAW,IAAD,EACYvF,mBAAS,MADrB,mBACfwF,EADe,KACJC,EADI,OAEczF,mBAAS,MAFvB,mBAEf0F,EAFe,KAEHC,EAFG,cAsBP3C,EAtBO,8EAsBtB,WAA4Bb,GAA5B,eAAAJ,EAAA,sEACsBG,EAASC,GAD/B,OACQtB,EADR,OAEY,SAAVsB,EAAmBsD,EAAa5E,GAAS8E,EAAc9E,GAFzD,4CAtBsB,sBA2BtB,OAvBA+E,qBAAU,WAAM,4CACd,sBAAA7D,EAAA,sEACQD,IADR,OAEE+D,eAAeC,QAAQ,aAAc,QACrCP,EAAMQ,QAAQC,QAAQ,KAHxB,4CADc,sBAMVT,EAAMU,UAAYV,EAAMU,SAASC,QANtB,WAAD,wBAOZC,KAED,CAACZ,EAAMU,SAAUV,EAAMQ,UAE1BH,qBAAU,WAAM,4CACd,sBAAA7D,EAAA,sEACQqE,QAAQC,IAAI,CAACrD,EAAa,QAASA,EAAa,aADxD,4CADc,uBAAC,WAAD,wBAIdsD,KACC,IAQD,6BACE,kBAAC,EAAD,CAAatD,aAAcA,IAC3B,6BACE,kBAAC,EAAD,CACEnC,MAAO2E,EACP3D,WAAY0D,EAAM1D,WAClB5D,MAAM,UAER,kBAAC,EAAD,CACE4C,MAAO6E,EACP7D,WAAY0D,EAAM1D,WAClB5D,MAAM,cC9BDsI,EAZE,WACf,OACE,6BACE,gFACA,4BACE,6DACA,sEC+DOC,MA/Df,WAAgB,IAAD,EACuBC,IAAMzG,UAAS,GADtC,mBACN6B,EADM,KACM6E,EADN,KAEPC,EAAM,uCAAG,sBAAA5E,EAAA,sDACbsC,OAAOuC,KACL,2DACA,SAHW,2CAAH,qDAOZ,OACE,0BAAMlI,UAAU,OACd,wCACA,yBAAKA,UAAU,eACb,kBAACmI,EAAA,EAAD,CACEzB,QAASvD,EAAa,mBAAqB,iBAC3CiF,QACE,kBAAC3G,EAAA,EAAD,CACE4G,UAAQ,EACR5F,MAAM,OACNf,KAAK,UACLC,QAAS,kBAAMqG,GAAe7E,QAIpC,kBAACgF,EAAA,EAAD,CACEzB,QAAQ,mBACR0B,QACE,kBAAC3G,EAAA,EAAD,CACE4G,UAAQ,EACR5F,MAAM,OACNf,KAAK,YACLC,QAAS,SAACtB,GACRA,EAAEoF,iBACFE,OAAO4B,SAASe,KAAO,gCAK/B,kBAACH,EAAA,EAAD,CACEzB,QAAQ,4BACR0B,QACE,kBAAC3G,EAAA,EAAD,CACE4G,UAAQ,EACR5F,MAAM,OACNf,KAAK,UACLC,QAAS,kBAAMsG,UAKvB,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEM,KAAK,IACLC,OAAQ,SAAC3B,GAAD,OAAW,kBAAC,EAAD,eAAM1D,WAAYA,GAAgB0D,KACrD4B,OAAK,IAEP,kBAAC,IAAD,CAAOF,KAAK,SAASG,UAAWb,OCrDpBc,QACW,cAA7BhD,OAAO4B,SAASqB,UAEe,UAA7BjD,OAAO4B,SAASqB,UAEhBjD,OAAO4B,SAASqB,SAASC,MACvB,2D,aCXNC,IAASN,OAEP,kBAAC,IAAD,CAAeO,SAAS,YACtB,kBAAC,EAAD,OAGFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a1aab148.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\n\nconst Book = ({ title, author, imgUrl }) => {\n  const container = useRef();\n  const text = useRef();\n  const bookImg = useRef();\n\n  const hoverImg = (event) => {\n    const imgWidth = event.target.offsetWidth;\n    const imgHeight = event.target.offsetHeight;\n\n    event.target.style.opacity = \"0.2\";\n    container.current.style.minWidth = imgWidth + \"px\";\n    text.current.style.minWidth = imgWidth + \"px\";\n    text.current.style.height = imgHeight + \"px\";\n    text.current.style.left = -imgWidth + \"px\";\n  };\n\n  const stopHover = () => {\n    bookImg.current.style.opacity = \"1\";\n    container.current.style.minWidth = \"64px\";\n    text.current.style.left = \"0px\";\n  };\n\n  return (\n    <div key={title} ref={container} className='Book' draggable='true'>\n      <img\n        src={imgUrl}\n        alt={title}\n        ref={bookImg}\n        onMouseEnter={(e) => hoverImg(e)}\n      />\n      <div ref={text} className='Book-text' onMouseLeave={(e) => stopHover(e)}>\n        <b>{title}</b>\n        <br />\n        {author}\n      </div>\n    </div>\n  );\n};\n\nexport default Book;\n","import React, { useState } from \"react\";\nimport { Button, Loader } from \"semantic-ui-react\";\nimport Book from \"./book\";\n\nconst Carousel = ({ items }) => {\n  const [startIndex, setStartIndex] = useState(0);\n  const onClickLeft = () => {\n    if (startIndex > 0) {\n      setStartIndex(startIndex - 1);\n    }\n  };\n  const onClickRight = () => {\n    if (startIndex < items.length - 1) {\n      setStartIndex(startIndex + 1);\n    }\n  };\n\n  const displayItems = (blocks) => {\n    let books = [];\n    for (let index = startIndex; index < blocks.length; index++) {\n      const element = blocks[index];\n      books.push(\n        <Book\n          key={element.title}\n          title={element.title}\n          imgUrl={element.imageUrl}\n          author={element.author}\n        />\n      );\n    }\n\n    let numPlaceholders = startIndex;\n    while (numPlaceholders > 0) {\n      books.push(<Book key={numPlaceholders} color={\"transparent\"} />);\n      numPlaceholders--;\n    }\n\n    // Place an extra placeholder at end\n    books.push(<Book key={numPlaceholders} color={\"transparent\"} />);\n\n    return books;\n  };\n\n  return (\n    <div className='Carousel'>\n      <Button\n        icon='arrow left'\n        onClick={onClickLeft}\n        disabled={!items || startIndex === 0}\n        style={{ height: \"50px\", margin: \"0 10px\" }}\n      />\n      <div style={{ display: \"flex\", overflow: \"hidden\", flex: \"1\" }}>\n        {items ? (\n          items.length > 0 ? (\n            displayItems(items)\n          ) : (\n            <div style={{ margin: \"0 auto\" }}>No books found.</div>\n          )\n        ) : (\n          <Loader inline='centered' active />\n        )}\n      </div>\n      <Button\n        icon='arrow right'\n        onClick={onClickRight}\n        disabled={!items || startIndex === items.length - 1}\n        style={{ height: \"50px\", margin: \"0 10px\" }}\n      />\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from \"react\";\nimport { Loader } from \"semantic-ui-react\";\n\nconst List = ({ items }) => {\n  return (\n    <div style={{ maxHeight: 200, overflow: \"auto\" }}>\n      <ul>\n        {items ? (\n          items.length > 0 ? (\n            items.map(({ bookId, title, author }) => (\n              <li draggable key={bookId}>\n                {title} by {author}\n              </li>\n            ))\n          ) : (\n            <div style={{ margin: \"0 auto\" }}>No books found.</div>\n          )\n        ) : (\n          <Loader inline='centered' active />\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default List;\n","import React from \"react\";\nimport Carousel from \"./carousel\";\nimport List from \"./list\";\n\nconst Section = ({ title, books, showAsList }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      {showAsList ? <List items={books} /> : <Carousel items={books} />}\n    </>\n  );\n};\n\nexport default Section;\n","import axios from \"axios\";\n\nexport async function callback() {\n  await axios.get(\"https://server-library.herokuapp.com/goodreads/callback\");\n}\n\nexport async function getBooks(shelf) {\n  const shelfResults = await axios.get(\n    \"https://server-library.herokuapp.com/goodreads/books/?shelf=\" + shelf\n  );\n  return shelfResults.data;\n}\n\nexport async function addBooks(shelf, selectedBooks) {\n  await axios.post(\"https://server-library.herokuapp.com/goodreads/books/\", {\n    bookIds: selectedBooks,\n    shelf,\n  });\n}\n\nexport async function searchBooks(query) {\n  const searchResults = await axios.get(\n    \"https://server-library.herokuapp.com/goodreads/search/?query=\" + query\n  );\n  return searchResults.data;\n}\n","import React, { useState } from \"react\";\nimport { Button, Segment } from \"semantic-ui-react\";\nimport { addBooks } from \"../services/goodreadsService\";\n\nconst SearchResultsContainer = ({\n  books,\n  setShowInfoBox,\n  resetSearch,\n  getBookLists,\n}) => {\n  const [selectedBooks, setSelectedBooks] = useState([]);\n\n  const onClickButton = async (shelf) => {\n    await addBooks(shelf, selectedBooks);\n    resetSearch();\n    setShowInfoBox(true);\n    getBookLists(shelf);\n  };\n\n  const onClickBook = (bookId) => {\n    if (selectedBooks.includes(bookId)) {\n      setSelectedBooks(\n        selectedBooks.filter((selectedBook) => selectedBook !== bookId)\n      );\n    } else {\n      setSelectedBooks([...selectedBooks, bookId]);\n    }\n  };\n\n  const onClickClear = () => {\n    resetSearch();\n  };\n\n  return (\n    <Segment>\n      <h3>SEARCH RESULTS</h3>\n      {books && books.length > 0 && (\n        <ul>\n          {books.map(({ bookId, title, author }) => (\n            <li\n              key={bookId}\n              onClick={(e) => onClickBook(bookId)}\n              className={selectedBooks.includes(bookId) ? \"selectedBook\" : null}\n            >\n              {title} by {author}\n            </li>\n          ))}\n        </ul>\n      )}\n      <Button.Group>\n        <Button onClick={() => onClickButton(\"read\")}>Add to done.</Button>\n        <Button.Or />\n        <Button onClick={() => onClickButton(\"to-read\")}>Add to later.</Button>\n      </Button.Group>\n      <Button color='teal' style={{ marginLeft: 16 }} onClick={onClickClear}>\n        Clear\n      </Button>\n    </Segment>\n  );\n};\n\nexport default SearchResultsContainer;\n","import React, { useState, useRef } from \"react\";\nimport { Form, Message } from \"semantic-ui-react\";\nimport { searchBooks } from \"../services/goodreadsService\";\nimport SearchResultsContainer from \"./searchResults\";\n\nconst AddBookForm = ({ getBookLists }) => {\n  const searchResultsHeader = useRef(null);\n\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [showInfoBox, setShowInfoBox] = useState(false);\n  const [loadingSearch, setLoadingSearch] = useState(false);\n\n  const resetSearch = () => {\n    setSearchValue(\"\");\n    setSearchResults([]);\n  };\n\n  async function fetchSearchResults(e) {\n    e.preventDefault();\n\n    setShowInfoBox(false);\n    setLoadingSearch(true);\n    const res = await searchBooks(searchValue);\n    setSearchResults(res);\n    if (searchResultsHeader !== null) {\n      window.scrollTo(0, searchResultsHeader.current.offsetTop);\n    }\n    setLoadingSearch(false);\n  }\n\n  return (\n    <div style={{ paddingBottom: \"24px\" }}>\n      <h2 ref={searchResultsHeader}>add.</h2>\n      <Form>\n        <Form.Input\n          fluid\n          action={{\n            color: \"teal\",\n            icon: \"search\",\n            loading: loadingSearch,\n            onClick: (e) => fetchSearchResults(e),\n          }}\n          placeholder='Search Goodreads for books'\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value)}\n        />\n      </Form>\n      {searchResults.length > 0 && !showInfoBox && (\n        <SearchResultsContainer\n          books={searchResults}\n          setShowInfoBox={setShowInfoBox}\n          getBookLists={getBookLists}\n          resetSearch={resetSearch}\n        />\n      )}\n      {showInfoBox && (\n        <Message\n          info\n          content='This book has also been added to your list in Goodreads.'\n          onDismiss={() => setShowInfoBox(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AddBookForm;\n","import React, { useEffect, useState } from \"react\";\nimport Section from \"../components/section\";\nimport AddBookForm from \"../components/addBookForm\";\nimport { getBooks, callback } from \"../services/goodreadsService\";\n\nconst Home = (props) => {\n  const [readBooks, setReadBooks] = useState(null);\n  const [laterBooks, setLaterBooks] = useState(null);\n\n  useEffect(() => {\n    async function redirectAfterAuthorization() {\n      await callback();\n      sessionStorage.setItem(\"authorized\", \"true\");\n      props.history.replace(\"/\");\n    }\n    if (props.location && props.location.search) {\n      redirectAfterAuthorization();\n    }\n  }, [props.location, props.history]);\n\n  useEffect(() => {\n    async function getAllBooks() {\n      await Promise.all([getBookLists(\"read\"), getBookLists(\"to-read\")]);\n    }\n    getAllBooks();\n  }, []);\n\n  async function getBookLists(shelf) {\n    const books = await getBooks(shelf);\n    shelf === \"read\" ? setReadBooks(books) : setLaterBooks(books);\n  }\n\n  return (\n    <div>\n      <AddBookForm getBookLists={getBookLists} />\n      <div>\n        <Section\n          books={readBooks}\n          showAsList={props.showAsList}\n          title='done.'\n        />\n        <Section\n          books={laterBooks}\n          showAsList={props.showAsList}\n          title='later.'\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst Booklist = () => {\n  return (\n    <div>\n      <h2>Books I haven't decided if I want to read or not</h2>\n      <ul>\n        <li>The Tenant by Katrine Engberg</li>\n        <li>The Singapore Grip by J. G. Farrell</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Booklist;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Button, Popup } from \"semantic-ui-react\";\nimport \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport Home from \"./pages/Home\";\nimport Booklist from \"./pages/Booklist\";\n\nfunction App() {\n  const [showAsList, setShowAsList] = React.useState(false);\n  const signIn = async () => {\n    window.open(\n      \"https://server-library.herokuapp.com/goodreads/authorize\",\n      \"_self\"\n    );\n  };\n\n  return (\n    <main className='App'>\n      <h1>library.</h1>\n      <div className='buttonGroup'>\n        <Popup\n          content={showAsList ? \"Show as carousel\" : \"Show as lists.\"}\n          trigger={\n            <Button\n              circular\n              color='teal'\n              icon='list ul'\n              onClick={() => setShowAsList(!showAsList)}\n            />\n          }\n        />\n        <Popup\n          content='Go to Goodreads.'\n          trigger={\n            <Button\n              circular\n              color='teal'\n              icon='goodreads'\n              onClick={(e) => {\n                e.preventDefault();\n                window.location.href = \"http://www.goodreads.com\";\n              }}\n            />\n          }\n        />\n        <Popup\n          content='Authorize with Goodreads.'\n          trigger={\n            <Button\n              circular\n              color='teal'\n              icon='sign-in'\n              onClick={() => signIn()}\n            />\n          }\n        />\n      </div>\n      <hr />\n      <Switch>\n        <Route\n          path='/'\n          render={(props) => <Home showAsList={showAsList} {...props} />}\n          exact\n        />\n        <Route path='/maybe' component={Booklist} />\n      </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <BrowserRouter basename='/library'>\n    <App />\n  </BrowserRouter>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}